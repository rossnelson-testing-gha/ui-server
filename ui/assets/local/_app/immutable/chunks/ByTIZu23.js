const c=(t,r)=>{const e=t.charCodeAt(r);return e>=65&&e<=90},i=t=>t?t[0].toUpperCase()+t.slice(1):"",f=t=>i(t).replace(/([A-Z])/g," $1").trim(),u=new Set(["workflowType"]),o={workflowExecutionWorkflowId:"workflowId",workflowExecutionRunId:"runId",protocolInstanceId:"updateId",metaUpdateId:"updateId"},p=t=>t?u.has(t)?`${t}Name`:o[t]?o[t]:t:"",a=t=>{if(!t)return"";if(t==="id")return"ID";let r="",e=0;for(t=p(t);e<t.length;){const n=t[e],s=t[e+1];if(e===0){r+=t[e].toUpperCase(),e++;continue}if(n+s==="Id"){r+=" ID",e+=2;continue}if(c(t,e)){r+=" ",r+=n.toUpperCase(),e++;continue}r+=n,e++}return r};export{i as c,a as f,f as s};
